"use client";
import React from "react";
const API_BASE=process.env.NEXT_PUBLIC_API_BASE||"http://localhost:8000";
type Fields=Record<string,string>;
export default function UploadCard(){const[busy,setBusy]=React.useState(false);const[status,setStatus]=React.useState("Checking backend…");const[fields,setFields]=React.useState<Fields>({});const[device,setDevice]=React.useState<string|null>(null);
React.useEffect(()=>{(async()=>{try{const r=await fetch(`${API_BASE}/health`);if(r.ok){const j=await r.json();setDevice(j.device);setStatus(`Ready on ${j.device}`)}else{setStatus("Backend not responding")}}catch{setStatus("Backend not reachable")}})()},[]);
const onDrop=React.useCallback((file:File)=>{void sendFile(file)},[]);
async function sendFile(file:File){setBusy(true);setFields({});try{const fd=new FormData();fd.append("file",file);const res=await fetch(`${API_BASE}/predict`,{method:"POST",body:fd});if(!res.ok){throw new Error(await res.text())}const data=await res.json();setFields(data.fields||{})}catch(err:any){setFields({ERROR:err?.message||"Upload failed"})}finally{setBusy(false)}}
function handleFileChange(e:React.ChangeEvent<HTMLInputElement>){const f=e.target.files?.[0];if(f) onDrop(f)}
return(<div className="w-[min(760px,92vw)] bg-slate-900 p-8 rounded-2xl shadow-2xl border border-slate-800"><h1 className="text-2xl font-semibold mb-1">Invoice → Excel</h1><p className="text-slate-300 mb-5">Upload a photo or scan. We’ll extract key fields and append to the Excel workbook.</p><div onDragOver={(e)=>{e.preventDefault()}} onDrop={(e)=>{e.preventDefault();const f=e.dataTransfer.files?.[0];if(f) onDrop(f)}} className="border-2 border-dashed border-slate-700 rounded-xl p-8 text-center mb-4 hover:border-blue-500 transition-colors"><p className="mb-3">Drag & drop an image here, or</p><label className="inline-block px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-500 cursor-pointer">Choose file<input type="file" accept="image/*" className="hidden" onChange={handleFileChange}/></label></div><div className="flex items-center justify-between mb-4"><span className="text-sm rounded-full border border-slate-700 px-3 py-1">{busy?"Processing…":status}</span><a className="text-sm text-blue-400 hover:text-blue-300 underline underline-offset-4" href={`${API_BASE}/download`} target="_blank" rel="noopener noreferrer">Download Excel</a></div><div className="grid gap-2">{Object.keys(fields).length===0&&!busy&&(<div className="text-slate-400 text-sm">No fields yet. Upload an image to get started.</div>)}{busy&&<div className="text-slate-300 text-sm">Crunching tokens…</div>}{Object.entries(fields).map(([k,v])=>(<div key={k} className="flex gap-3"><div className="w-40 text-slate-400">{k}</div><div className="font-mono">{v}</div></div>))}</div><div className="mt-4 text-xs text-slate-500">Backend: <code>{API_BASE}</code>{device?` • Device: ${device}`:""}</div></div>)}
